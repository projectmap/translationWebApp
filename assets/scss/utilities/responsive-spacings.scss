/* ==========================================================================
   #RESPONSIVE-SPACINGS
   ========================================================================== */

/**
 * Utility classes enhancing the normal spacing classes by adding responsiveness
 * to them. By default this brings us the following classes:
 *
 *   .u-margin-bottom-none@mobile {}
 *   .u-margin-bottom-none@tablet {}
 *   .u-margin-bottom-none@desktop {}
 *   .u-margin-bottom-none@wide {}
 *
 * But we can affect the classes that get generated by altering the appropriate
 * Sass maps below.
 */

// When using Sass-MQ, this defines the separator for the breakpoints suffix
// in the class name. By default, we are generating the responsive suffixes
// for the classes with a `@` symbol so you get classes like:
//
//   <div class="u-margin-bottom@mobile">
//
// Be aware that since the `@` symbol is a reserved symbol in CSS, it has to be
// escaped with a `\`. In the markup though, you write your classes without the
// backslash (e.g. `u-margin-bottom@mobile`).
$widths-breakpoint-separator: \@ !default;

$spacing-directions: (
  null: null,
  '-top': '-top',
  '-right': '-right',
  '-bottom': '-bottom',
  '-left': '-left',
) !default;

$spacing-properties: (
  'margin': 'margin',
  'padding': 'padding',
) !default;

$spacing-sizes: (
  null: $unit,
  '-tiny': $unit-tiny,
  '-small': $unit-small,
  '-large': $unit-large,
  '-huge': $unit-huge,
  '-none': 0,
) !default;

$responsive-spacing-sizes: (
  null: $unit,
  '-tiny': $unit-tiny,
  '-small': $unit-small,
  '-large': $unit-large,
  '-huge': $unit-huge,
  '-none': 0,
) !default;

$responsive-breakpoints: (
  tablet: map-get($mq-breakpoints, tablet),
  desktop: map-get($mq-breakpoints, desktop),
) !default;

/* stylelint-disable max-nesting-depth */

// Generatere normal spacings
@each $property-namespace, $property in $spacing-properties {
  @each $direction-namespace, $direction-rules in $spacing-directions {
    @each $size-namespace, $size in $spacing-sizes {
      .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {
        @each $direction in $direction-rules {
          #{$property}#{$direction}: $size !important;
        }
      }
    }
  }
}

// Generatere spacings with responsive endings
@each $property-namespace, $property in $spacing-properties {
  @each $direction-namespace, $direction-rules in $spacing-directions {
    @each $size-namespace, $size in $responsive-spacing-sizes {
      @each $bp-name, $bp-value in $responsive-breakpoints {
        @include mq($from: $bp-name) {
          .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace}#{$widths-breakpoint-separator}#{$bp-name} {
            @each $direction in $direction-rules {
              #{$property}#{$direction}: $size !important;
            }
          }
        }
      }
    }
  }
}

/* stylelint-enable max-nesting-depth */
